<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Doctor - Patient Consultations</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <!-- jQuery UI CSS for datepicker -->
  <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
  <!-- SweetAlert2 CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <style>
    html, body {
      height: 100%;
      margin: 0;
    }
    body {
      font-family: Arial, sans-serif;
      color: #333;
      background-color: #f7f7f7;
    }
    .reservation-container {
      min-height: 100vh;
      padding: 2rem;
      width: 100%;
      box-sizing: border-box;
    }
    .content-header {
      margin-bottom: 1rem;
    }
    .content-header h3 {
      font-size: 18px;
      color: #000;
      font-weight: bold;
      margin: 0;
    }
    .header-row {
      margin-bottom: 1.5rem;
    }
    .search-box {
      width: 300px;
      height: 30px;
    }
    .custom-table {
      table-layout: fixed;
      width: 100%;
      background-color: #ffffff;
    }
    .custom-table thead tr {
      background-color: #4B9CD3;
      color: #ffffff;
    }
    .custom-table thead th {
      text-align: center;
      padding: 12px;
      font-weight: 600;
      border: none;
    }
    .custom-table tbody tr {
      border-bottom: 1px solid #dee2e6;
    }
    .custom-table tbody td {
      text-align: center;
      padding: 12px;
    }
    .custom-table tbody tr:hover {
      background-color: #f9f9f9;
    }
    .badge-done {
      background-color: #28a745;
      color: #fff;
      font-size: 0.9em;
      padding: 0.5em;
    }
    .fixed-width {
      min-width: 120px;
    }
    /* Accordion Styling */
    .card-header {
      background-color: #f1f1f1;
      cursor: pointer;
    }
    .card-header h6 {
      margin: 0;
      font-weight: bold;
    }
    .card-body {
      background-color: #fafafa;
      font-size: 14px;
    }
  </style>
</head>
<body>
  <div class="container-fluid reservation-container">
    <div class="content-header">
      <h3>Patient Consultations</h3>
    </div>
    <div class="row header-row">
      <div class="col-md-12 d-flex justify-content-end align-items-center">
        <input type="text" class="form-control form-control-sm search-box" id="searchInput" placeholder="Search by Owner Name">
      </div>
    </div>
    <!-- Patients Table -->
    <table class="table custom-table mt-3" id="patientsTable">
      <thead>
        <tr>
          <th>Owner Name</th>
          <th>Service</th>
          <th>Consultation View Details</th>
          <th>Consultation</th>
          <th>Schedule</th>
          <th>Mark as Done</th>
        </tr>
      </thead>
      <tbody>
        <% patients.forEach(function(patient) { %>
          <tr 
            id="reservation-<%= patient._id %>"
            data-schedule="<%= (patient.schedule && patient.schedule.scheduleDate) ? new Date(patient.schedule.scheduleDate).toISOString().slice(0,10) : '' %>"
          >
            <td class="ownerName"><%= patient.ownerName %></td>
            <td><%= patient.service %></td>
            <td>
              <button class="btn btn-info btn-sm" onclick="viewConsultation('<%= patient._id %>')">
                View Details
              </button>
            </td>
            <td>
              <button class="btn btn-primary btn-sm fixed-width" onclick="addConsultation('<%= patient._id %>')">
                Add
              </button>
            </td>
            <td>
              <% if (patient.schedule && patient.schedule.scheduleDate) { %>
                <div>
                  <strong><%= new Date(patient.schedule.scheduleDate).toISOString().slice(0,10) %></strong><br>
                  <small><%= patient.schedule.scheduleDetails %></small>
                </div>
              <% } else { %>
                <button class="btn btn-secondary btn-sm fixed-width" onclick="openScheduleModal('<%= patient._id %>')">
                  Add
                </button>
              <% } %>
            </td>
            <td>
              <% if (patient.status === 'Done') { %>
                <span class="badge badge-done">Done</span>
              <% } else { %>
                <button class="btn btn-secondary btn-sm" onclick="markAsDone('<%= patient._id %>')">
                  Mark as Done
                </button>
              <% } %>
            </td>
          </tr>
        <% }); %>
      </tbody>
    </table>
    <!-- Modal for Adding Consultation -->
<div class="modal fade" id="consultationModal" tabindex="-1" role="dialog" aria-labelledby="consultationModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <form id="consultationForm">
        <div class="modal-header">
          <h5 class="modal-title" id="consultationModalLabel">Add Consultation Details</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <!-- Consultation Notes -->
          <div class="form-group">
            <label for="consultationNotes">Consultation Notes</label>
            <textarea class="form-control" id="consultationNotes" name="consultationNotes" rows="3" required></textarea>
          </div>
          <!-- Medication Details -->
          <div class="form-group">
            <label for="medicationName">Medication Name</label>
            <input type="text" class="form-control" id="medicationName" name="medicationName">
          </div>
          <div class="form-group">
            <label for="dosage">Dosage</label>
            <input type="text" class="form-control" id="dosage" name="dosage" placeholder="e.g., 500mg">
          </div>
          <div class="form-group">
            <label for="frequency">Frequency</label>
            <input type="text" class="form-control" id="frequency" name="frequency" placeholder="e.g., Twice a day">
          </div>
          <div class="form-group">
            <label for="adminTime">Administration Time</label>
            <input type="time" class="form-control" id="adminTime" name="adminTime">
          </div>
          <div class="form-group">
            <label for="additionalInstructions">Additional Instructions</label>
            <textarea class="form-control" id="additionalInstructions" name="additionalInstructions" rows="2"></textarea>
          </div>
          <!-- New Quantity Input (number only) -->
          <div class="form-group">
            <label for="quantity">Quantity</label>
            <input type="number" class="form-control" id="quantity" name="quantity" placeholder="Enter quantity" min="0">
          </div>
          <button type="button" class="btn btn-secondary mb-2" id="btnAddMedication">Add Medication</button>
          <div id="medicationsList" class="mb-3"></div>
          <!-- Hidden inputs -->
          <input type="hidden" id="medicationsData" name="medicationsData">
          <input type="hidden" id="reservationId" name="reservationId">
        </div>
        <div class="modal-footer">
          <button type="submit" class="btn btn-primary">Save Consultation</button>
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        </div>
      </form>
    </div>
  </div>
</div>

    <!-- Modal for Adding Schedule -->
    <div class="modal fade" id="scheduleModal" tabindex="-1" role="dialog" aria-labelledby="scheduleModalLabel" aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <form id="scheduleForm">
            <div class="modal-header">
              <h5 class="modal-title" id="scheduleModalLabel">Schedule Follow-Up</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">
              <!-- Inline Calendar for Schedule Date -->
              <div id="scheduleDatePicker"></div>
              <input type="hidden" id="scheduleDate" name="scheduleDate" required>
              <div class="form-group mt-3">
                <label for="scheduleDetails">Service Details</label>
                <input type="text" class="form-control" id="scheduleDetails" name="scheduleDetails" placeholder="e.g., Checkup, Vaccination" required>
              </div>
              <input type="hidden" id="scheduleReservationId" name="reservationId">
            </div>
            <div class="modal-footer">
              <button type="submit" class="btn btn-primary">Save Schedule</button>
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
          </form>
        </div>
      </div>
    </div>
    <!-- Global Calendar Modal -->
    <div class="modal fade" id="globalCalendarModal" tabindex="-1" role="dialog" aria-labelledby="globalCalendarModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="globalCalendarModalLabel">Follow-Up Calendar</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <div id="globalCalendarPicker"></div>
            <div id="followUpList" class="mt-3"></div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
    </div>
    <!-- Modal for Viewing Consultation Details (with Accordion History) -->
    <div class="modal fade" id="viewConsultationModal" tabindex="-1" role="dialog" aria-labelledby="viewConsultationModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="viewConsultationModalLabel">Consultation Details</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body" id="consultationDetails">
            <!-- Consultation details and history will load here -->
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- jQuery, jQuery UI, Bootstrap JS -->
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <!-- SweetAlert2 JS -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    // Standard birthday formatter (if needed elsewhere)
    function formatBirthday(dateStr) {
      const date = new Date(dateStr);
      return date.toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' });
    }

    // Custom formatter for consultation history dates (e.g., "januar 20 2025")
    function formatCustomDate(dateStr) {
      const date = new Date(dateStr);
      // Get the month name in long format and convert it to lowercase.
      const month = date.toLocaleString('en-US', { month: 'long' }).toLowerCase();
      const day = date.getDate();
      const year = date.getFullYear();
      return `${month} ${day} ${year}`;
    }

    // ----------------- View Consultation (with Accordion History) -----------------
    function viewConsultation(reservationId) {
      $.ajax({
        url: '/doctor/get-consultation',
        method: 'GET',
        data: { reservationId: reservationId },
        success: function(response) {
          if(response.success) {
            let detailsHtml = '';
            // Main Consultation Details
            if(response.reservation.pets && response.reservation.pets.length > 0) {
              let petObj = response.reservation.pets[0].petId || response.reservation.pets[0];
              detailsHtml += '<p><strong>Pet Name:</strong> ' + petObj.petName + '</p>';
              detailsHtml += '<p><strong>Birthday:</strong> ' + (petObj.birthday ? formatBirthday(petObj.birthday) : 'N/A') + '</p>';
            }
            if(response.reservation.concerns) {
              detailsHtml += '<p><strong>Customer Concerns:</strong> ' + response.reservation.concerns + '</p>';
            }
            
            // Fetch consultation history for the pet
            if(response.reservation.pets && response.reservation.pets.length > 0) {
              let petObj = response.reservation.pets[0].petId || response.reservation.pets[0];
              $.ajax({
                url: '/hr/get-pet-history',
                method: 'GET',
                data: { 
                  petId: petObj._id,         // adjust if needed
                  petName: petObj.petName, 
                  ownerId: response.reservation.owner
                },
                success: function(historyResponse) {
                  if(historyResponse.success && historyResponse.history.length > 0) {
                    detailsHtml += '<hr><p><strong>Consultation History:</strong></p>';
                    // Build an accordion for the history
                    detailsHtml += '<div id="historyAccordion">';
                    historyResponse.history.forEach(function(record, index) {
                      // Use updated date field if available, otherwise createdAt
                      const dateField = record.updatedAt || record.createdAt;
                      const formattedDate = formatCustomDate(dateField);
                      detailsHtml += `
                        <div class="card mb-2">
                          <div class="card-header" id="heading${index}" data-toggle="collapse" data-target="#collapse${index}" aria-expanded="false" aria-controls="collapse${index}">
                            <h6 class="mb-0">${formattedDate}</h6>
                          </div>
                          <div id="collapse${index}" class="collapse" aria-labelledby="heading${index}" data-parent="#historyAccordion">
                            <div class="card-body">
                              <p><strong>Consultation Notes:</strong> ${record.consultationNotes || 'N/A'}</p>`;
                      if(record.medications && record.medications.length > 0) {
                        detailsHtml += '<ul>';
                        record.medications.forEach(function(med) {
                          detailsHtml += `
                            <li>
                              <p><strong>Medication:</strong> ${med.medicationName}</p>
                              <p><strong>Dosage:</strong> ${med.dosage}</p>
                              <p><strong>Frequency:</strong> ${med.frequency}</p>
                              <p><strong>Admin Time:</strong> ${med.adminTime}</p>
                              <p><strong>Instructions:</strong> ${med.additionalInstructions || 'N/A'}</p>
                              <p><strong>Quantity:</strong> ${med.quantity || 'N/A'}</p>
                            </li>`;
                        });
                        detailsHtml += '</ul>';
                      }
                      if(record.schedule && record.schedule.scheduleDate) {
                        detailsHtml += `<p><strong>Follow-Up Date:</strong> ${formatCustomDate(record.schedule.scheduleDate)}</p>`;
                      }
                      detailsHtml += `
                            </div>
                          </div>
                        </div>`;
                    });
                    detailsHtml += '</div>';
                  }
                  $("#consultationDetails").html(detailsHtml);
                  $("#viewConsultationModal").modal("show");
                },
                error: function() {
                  $("#consultationDetails").html(detailsHtml);
                  $("#viewConsultationModal").modal("show");
                }
              });
            } else {
              $("#consultationDetails").html(detailsHtml);
              $("#viewConsultationModal").modal("show");
            }
          } else {
            Swal.fire('Error', response.message || 'Error fetching consultation details.', 'error');
          }
        },
        error: function() {
          Swal.fire('Error', 'Server error while fetching consultation details.', 'error');
        }
      });
    }

    // ----------------- Medication Handling -----------------
    let medications = [];
    function renderMedications() {
      let container = $("#medicationsList");
      container.empty();
      medications.forEach((med, index) => {
        let medItem = $(`
          <div class="medication-item" data-index="${index}">
            <span class="med-name">
              ${med.medicationName} | ${med.dosage} | ${med.frequency} | ${med.adminTime} | ${med.additionalInstructions} | Qty: ${med.quantity || 'N/A'}
            </span>
            <button type="button" class="btn btn-sm btn-warning edit-med">Edit</button>
            <button type="button" class="btn btn-sm btn-danger remove-med">Remove</button>
          </div>
        `);
        container.append(medItem);
      });
    }

    $("#btnAddMedication").click(function() {
      let medicationName = $("#medicationName").val().trim();
      if(medicationName === "") {
        Swal.fire('Error', 'Medication name is required.', 'error');
        return;
      }
      let dosage = $("#dosage").val().trim();
      let frequency = $("#frequency").val().trim();
      let adminTime = $("#adminTime").val().trim();
      let additionalInstructions = $("#additionalInstructions").val().trim();
      let quantity = $("#quantity").val().trim();
      let medObj = { medicationName, dosage, frequency, adminTime, additionalInstructions, quantity };
      medications.push(medObj);
      // Clear all input fields
      $("#medicationName, #dosage, #frequency, #adminTime, #additionalInstructions, #quantity").val('');
      renderMedications();
    });

    $("#medicationsList").on("click", ".edit-med", function() {
      let index = $(this).closest(".medication-item").data("index");
      let med = medications[index];
      $("#medicationName").val(med.medicationName);
      $("#dosage").val(med.dosage);
      $("#frequency").val(med.frequency);
      $("#adminTime").val(med.adminTime);
      $("#additionalInstructions").val(med.additionalInstructions);
      $("#quantity").val(med.quantity);
      medications.splice(index, 1);
      renderMedications();
    });

    $("#medicationsList").on("click", ".remove-med", function() {
      let index = $(this).closest(".medication-item").data("index");
      medications.splice(index, 1);
      renderMedications();
    });

    // ----------------- Consultation Form Submission -----------------
    $("#consultationForm").submit(function(e) {
      e.preventDefault();
      $("#medicationsData").val(medications.length ? JSON.stringify(medications) : "[]");
      let formData = $(this).serialize();
      $.ajax({
        url: '/doctor/add-consultation',
        method: 'POST',
        data: formData,
        success: function(response) {
          if(response.success) {
            Swal.fire({
              icon: 'success',
              title: 'Success',
              text: 'Consultation details saved.'
            }).then(() => {
              $("#consultationModal").modal("hide");
            });
          } else {
            Swal.fire('Error', response.message || 'Error saving consultation details.', 'error');
          }
        },
        error: function() {
          Swal.fire('Error', 'Server error while saving consultation details.', 'error');
        }
      });
    });

    // ----------------- Schedule Modal Handling -----------------
    function openScheduleModal(reservationId) {
      $("#scheduleReservationId").val(reservationId);
      $("#scheduleForm")[0].reset();
      $("#scheduleDatePicker").datepicker("destroy");
      $("#scheduleDatePicker").datepicker({
        dateFormat: "yy-mm-dd",
        onSelect: function(dateText) {
          $("#scheduleDate").val(dateText);
        }
      });
      $("#scheduleModal").modal("show");
    }

    $("#scheduleForm").submit(function(e) {
      e.preventDefault();
      let scheduleData = $(this).serialize();
      $.ajax({
        url: '/doctor/add-schedule',
        method: 'POST',
        data: scheduleData,
        success: function(response) {
          if(response.success) {
            Swal.fire({
              icon: 'success',
              title: 'Success',
              text: 'Schedule saved successfully.'
            }).then(() => {
              let row = $("#reservation-" + response.reservation._id);
              row.find("td:nth-child(5)").html(
                `<div>
                  <strong>${new Date(response.reservation.schedule.scheduleDate).toISOString().slice(0,10)}</strong><br>
                  <small>${response.reservation.schedule.scheduleDetails}</small>
                </div>`
              );
              $("#scheduleModal").modal("hide");
            });
          } else {
            Swal.fire('Error', response.message || 'Error saving schedule.', 'error');
          }
        },
        error: function() {
          Swal.fire('Error', 'Server error while saving schedule.', 'error');
        }
      });
    });

    // ----------------- Search Functionality -----------------
    $("#searchInput").on("keyup", function () {
      var searchValue = $(this).val().toLowerCase();
      $("#patientsTable tbody tr").filter(function () {
        $(this).toggle($(this).find('.ownerName').text().toLowerCase().indexOf(searchValue) > -1);
      });
    });

    // ----------------- Global Calendar -----------------
    var patientsData = <%- JSON.stringify(patients) %>;
    var scheduledDates = [];
    patientsData.forEach(function(patient) {
      if(patient.schedule && patient.schedule.scheduleDate) {
        var d = new Date(patient.schedule.scheduleDate).toISOString().slice(0,10);
        if(scheduledDates.indexOf(d) === -1) {
          scheduledDates.push(d);
        }
      }
    });

    function initGlobalCalendar() {
      $("#globalCalendarPicker").datepicker("destroy");
      $("#globalCalendarPicker").datepicker({
        inline: true,
        dateFormat: "yy-mm-dd",
        beforeShowDay: function(date) {
          let dateString = $.datepicker.formatDate("yy-mm-dd", date);
          if(scheduledDates.indexOf(dateString) !== -1) {
            return [true, "green-highlight", "Scheduled"];
          }
          return [true, "", ""];
        },
        onSelect: function(dateText) {
          let followUps = patientsData.filter(function(patient) {
            if(patient.schedule && patient.schedule.scheduleDate) {
              return new Date(patient.schedule.scheduleDate).toISOString().slice(0,10) === dateText;
            }
            return false;
          });
          let listHtml = "";
          if(followUps.length > 0) {
            followUps.forEach(function(fu) {
              listHtml += "<div><strong>Owner:</strong> " + fu.ownerName + 
                          " &nbsp; <strong>Service:</strong> " + fu.schedule.scheduleDetails + 
                          " &nbsp; <strong>Date:</strong> " + new Date(fu.schedule.scheduleDate).toISOString().slice(0,10) + 
                          "</div><hr>";
            });
          } else {
            listHtml = "<div>No follow-ups for this date.</div>";
          }
          $("#followUpList").html(listHtml);
        }
      });
    }

    // ----------------- Add Consultation (Button) -----------------
    function addConsultation(reservationId) {
      $("#reservationId").val(reservationId);
      $("#consultationForm")[0].reset();
      medications = [];
      renderMedications();
      $("#consultationModal").modal("show");
    }

    // ----------------- Mark as Done -----------------
    function markAsDone(reservationId) {
      Swal.fire({
        title: 'Mark as Done?',
        text: 'Are you sure you want to mark this consultation as done?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, done',
        cancelButtonText: 'Cancel'
      }).then((result) => {
        if (result.isConfirmed) {
          $.ajax({
            url: '/doctor/mark-as-done',
            method: 'POST',
            data: { reservationId: reservationId },
            success: function(response) {
              if(response.success) {
                Swal.fire({
                  icon: 'success',
                  title: 'Done',
                  text: 'Consultation marked as done.'
                }).then(() => {
                  $("#reservation-" + reservationId).remove();
                });
              } else {
                Swal.fire('Error', response.message || 'Error marking as done.', 'error');
              }
            },
            error: function() {
              Swal.fire('Error', 'Server error while marking as done.', 'error');
            }
          });
        }
      });
    }
  </script>
</body>
</html>
